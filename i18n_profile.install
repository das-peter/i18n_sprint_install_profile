<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function i18n_profile_install() {
  // Trigger default install first.
  require_once dirname(__FILE__) . '/../standard/standard.install';
  standard_install();

  // Add some languages
  $languages = array('en', 'de', 'es');
  $installedLanguages = language_list();
  foreach ($languages as $weight => $langcode) {
    $default = $langcode == 'en';

    if (!isset($installedLanguages[$langcode])) {
      locale_add_language($langcode, NULL, NULL, LANGUAGE_LTR, '', $langcode, TRUE, $default);
      continue;
    }
    db_update('languages')
    ->fields(array(
      'weight' => $weight,
      'prefix' => $langcode, // Make sure every language has a prefix
    ))
    ->condition('language', $langcode)
    ->execute();
    $installedLanguages[$langcode]->prefix = $langcode;
  }
  // Enable this to make sure your default language has a prefix to
  // otherwise you could end up with dead ends on multilingual pages which use
  // path prefixes.
  // variable_set('language_default', $installedLanguages['en']);

  // Configure Language Negotioation
  require_once DRUPAL_ROOT . '/includes/language.inc';
  $language_negotiation_providers = language_negotiation_info();

  // Language detection configuration (interface)
  language_negotiation_set('language', array(
    LOCALE_LANGUAGE_NEGOTIATION_SESSION => $language_negotiation_providers[LOCALE_LANGUAGE_NEGOTIATION_SESSION],
    LOCALE_LANGUAGE_NEGOTIATION_USER => $language_negotiation_providers[LOCALE_LANGUAGE_NEGOTIATION_USER],
    LOCALE_LANGUAGE_NEGOTIATION_URL => $language_negotiation_providers[LOCALE_LANGUAGE_NEGOTIATION_URL],
    LOCALE_LANGUAGE_NEGOTIATION_BROWSER => $language_negotiation_providers[LOCALE_LANGUAGE_NEGOTIATION_BROWSER],
    LANGUAGE_NEGOTIATION_DEFAULT => $language_negotiation_providers[LANGUAGE_NEGOTIATION_DEFAULT],
  ));
  // Detection Adapter Setup - URL
  language_negotiation_set('language_url', array(
    LOCALE_LANGUAGE_NEGOTIATION_URL => $language_negotiation_providers[LOCALE_LANGUAGE_NEGOTIATION_URL],
    LOCALE_LANGUAGE_NEGOTIATION_URL_FALLBACK => $language_negotiation_providers[LOCALE_LANGUAGE_NEGOTIATION_URL_FALLBACK],
  ));
  // Content Language Detection - just base on interface language
  language_negotiation_set('language_content', array(
    LOCALE_LANGUAGE_NEGOTIATION_INTERFACE => $language_negotiation_providers[LOCALE_LANGUAGE_NEGOTIATION_INTERFACE],
    LANGUAGE_NEGOTIATION_DEFAULT => $language_negotiation_providers[LANGUAGE_NEGOTIATION_DEFAULT],
  ));

  // Language Detection Order
  variable_set('locale_language_providers_weight_language', array(
    'locale-session' => -10,
    'locale-user' => -9,
    'locale-url' => -8,
    'locale-browser' => -7,
    'language-default' => -6,
  ));

  // Enable field translations
  variable_set('entity_translation_entity_types', array(
    'node' => 'node',
  ));

  // Enable title replacement for all node bundles.
  $bundles = field_info_bundles('node');
  foreach ($bundles as $bundle => $bundle_info) {
    title_field_replacement_toggle('node', $bundle, 'title');
  }
}
